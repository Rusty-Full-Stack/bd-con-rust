//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "producto")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub nombre: String,
    #[sea_orm(column_type = "Decimal(Some((10, 2)))")]
    pub precio_unitario: Decimal,
    #[sea_orm(column_type = "Text", nullable)]
    pub descripcion: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::detalle_factura::Entity")]
    DetalleFactura,
}

impl Related<super::detalle_factura::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::DetalleFactura.def()
    }
}

impl Related<super::factura::Entity> for Entity {
    fn to() -> RelationDef {
        super::detalle_factura::Relation::Factura.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::detalle_factura::Relation::Producto.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
